1- Selezionare tutte le software house americane (3)

Risposta:
SELECT * 
FROM software_houses 
WHERE country LIKE 'united states';

2- Selezionare tutti i giocatori della cittÃ  di 'Rogahnland' (2)

Risposta:
SELECT* 
FROM players
WHERE city 
LIKE 'Rogahnland';

3- Selezionare tutti i giocatori il cui nome finisce per "a" (220)

Risposta:
SELECT* 
FROM players 
WHERE name LIKE "%a";

4- Selezionare tutte le recensioni scritte dal giocatore con ID = 800 (11)

Risposta:
SELECT * 
FROM reviews 
WHERE reviews.player_id LIKE 800;

5- Contare quanti tornei ci sono stati nell \anno 2015 (9)

Risposta:
SELECT  COUNT(*) 
FROM `tournaments` 
WHERE tournaments.year LIKE 2015;

6- Selezionare tutti i premi che contengono nella descrizione la parola 'facere' (2)

Risposta:
SELECT* 
FROM awards 
WHERE awards.description LIKE "%facere%";

7- Selezionare tutti i videogame che hanno la categoria 2 (FPS) o 6 (RPG),
 mostrandoli una sola volta (del videogioco vogliamo solo l\ID) (287)

 Risposta:
 SELECT videogame_id, COUNT(*) 
 FROM category_videogame 
 WHERE category_id LIKE 2 = 1 OR category_id LIKE 6 = 1 
 GROUP BY videogame_id;

 8- Selezionare tutte le recensioni con voto compreso tra 2 e 4 (2947)

 Risposta:
 SELECT* 
 FROM reviews 
 WHERE rating BETWEEN 2 AND 4;


9- Selezionare tutti i dati dei videogiochi rilasciati nell\anno 2020 (46)

Risposta:
SELECT videogames.id, videogames.name, videogames.overview 
FROM videogames 
WHERE YEAR(release_date) = 2020;

10- Selezionare gli id videogame che hanno ricevuto almeno
 una recensione da 5 stelle, mostrandoli una sola volta (443)

 Risposta:
 SELECT videogame_id 
 FROM reviews 
 WHERE rating IS NOT NULL 
 AND rating >= 5 GROUP BY videogame_id;

 11- Selezionare il numero e la media delle recensioni 
 per il videogioco con ID = 412 (review number = 12, avg_rating = 3.16 circa)

 Risposta:
 SELECT COUNT(*) 
 FROM reviews 
 WHERE videogame_id = 412;

 SELECT AVG(rating) 
 FROM reviews 
 WHERE videogame_id = 412;


12- Selezionare il numero di videogame che la software house con ID = 1 ha rilasciato nel 2018 (13)

Risposta:
 SELECT COUNT(*) 
 FROM videogames 
 WHERE YEAR(release_date) = 2018 
 AND software_house_id = 1;


GROUP BY

1- Contare quante software house ci sono per ogni paese (3)

Risposta:
SELECT software_houses.country, COUNT(*) 
FROM software_houses 
GROUP BY software_houses.country;

2- Contare quante recensioni ha ricevuto ogni videogioco (del videogioco vogliamo solo l\ID) (500)

Risposta:

SELECT videogame_id, COUNT(*) 
FROM reviews 
GROUP BY videogame_id;

3- Contare quanti videogiochi hanno ciascuna classificazione PEGI (della classificazione PEGI vogliamo solo l\ID) (13)

Risposta:

SELECT pegi_label_id,COUNT(*) 
FROM pegi_label_videogame 
GROUP BY pegi_label_id;

4- Mostrare il numero di videogiochi rilasciati ogni anno (11)

Risposta:
SELECT YEAR(release_date), COUNT(*) 
FROM videogames 
GROUP BY YEAR(release_date);

5- Contare quanti videogiochi sono disponbiili per ciascun device (del device vogliamo solo l\ID) (7)

Risposta:

SELECT device_id, COUNT(*) 
FROM device_videogame 
GROUP BY device_id;

6- Ordinare i videogame in base alla media delle recensioni (del videogioco vogliamo solo l\ID) (500)

Risposta:
SELECT videogame_id, AVG(rating) 
FROM reviews 
GROUP BY videogame_id;


JOIN

1- Selezionare i dati di tutti giocatori che hanno scritto 
almeno una recensione, mostrandoli una sola volta (996)

Risposta:
SELECT DISTINCT players.* 
FROM players JOIN reviews 
ON players.id = reviews.player_id 
WHERE reviews.message >= "1";

2- Sezionare tutti i videogame dei tornei tenuti nel 2016, mostrandoli una sola volta (226)

Risposta:

SELECT DISTINCT videogames.* 
FROM tournaments 
JOIN tournament_videogame 
ON tournaments.id = tournament_videogame.tournament_id 
JOIN videogames 
ON tournament_videogame.videogame_id = videogames.id 
WHERE tournaments.`year` = 2016;




3- Mostrare le categorie di ogni videogioco (1718)

Risposta:
SELECT categories.name 
FROM categories 
JOIN category_videogame 
ON categories.id = category_videogame.category_id;

4- Selezionare i dati di tutte le software house che hanno rilasciato almeno un gioco dopo il 2020, mostrandoli una sola volta (6)

Risposta:

SELECT DISTINCT software_houses.* 
FROM software_houses 
JOIN videogames 
ON software_houses.id = videogames.software_house_id 
WHERE YEAR(videogames.release_date) > 2020;

5- Selezionare i premi ricevuti da ogni software house per i videogiochi che ha prodotto (55)
 
 Risposta:

 SELECT awards.* 
 FROM awards 
 JOIN award_videogame 
 ON awards.id = award_videogame.award_id 
 JOIN videogames
 ON videogames.id = award_videogame.id;


7- Selezionare quali giochi erano presenti nei tornei nei quali hanno 
partecipato i giocatori il cui nome inizia per 'S' (474)

Risposta:
SELECT DISTINCT videogames.id, videogames.name 
FROM players 
JOIN player_tournament 
ON players.id = player_tournament.player_id 
JOIN tournaments 
ON player_tournament .tournament_id = tournaments.id 
JOIN tournament_videogame 
ON tournaments.id = tournament_videogame.tournament_id 
JOIN videogames 
ON tournament_videogame.videogame_id = videogames.id 
WHERE players.name LIKE 's%';


8- Selezionare le cittÃ  in cui Ã¨ stato giocato il gioco dell\anno del 2018 (36)

Risposta:
SELECT DISTINCT tournaments.city 
FROM awards 
JOIN award_videogame 
ON awards.id = award_videogame.award_id 
JOIN videogames 
ON award_videogame.videogame_id = videogames.id
jOIN tournament_videogame  
ON videogames.id = tournament_videogame .videogame_id 
JOIN tournaments 
ON tournament_videogame .tournament_id = tournaments.id 
WHERE awards.name LIKE "gioco dell'anno"
AND award_videogame.`year` = 2018;



9- Selezionare i giocatori che hanno giocato al gioco piÃ¹ atteso del 2018 in un torneo del 2019 (3306)
SELECT DISTINCT players.*
FROM awards 
JOIN award_videogame
ON awards.id = award_videogame.award_id 
JOIN videogames  
ON award_videogame.videogame_id = videogames.id
JOIN tournament_videogame 
ON videogames.id = tournament_videogame.videogame_id 
JOIN tournaments 
ON tournament_videogame.tournament_id = tournaments.id 
JOIN player_tournament 
ON tournaments.id = tournament_videogame.tournament_id 
JOIN players 
ON player_tournament.player_id = players.id
WHERE awards.name LIKE 'Gioco più atteso'AND award_videogame.`year` = 2018 AND tournaments.`year` = 2019;